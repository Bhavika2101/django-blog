# Test generated by RoostGPT for test python-django using AI Type Vertex AI and AI Model code-bison-32k

import unittest
from django.test import TestCase
from django.contrib.auth.forms import PasswordChangeForm
from django.contrib.auth.models import User
from django.urls import reverse_lazy
from views import form_valid

class TestFormValid(TestCase):

    def test_Form_valid_cd84ba476e(self):
        form = PasswordChangeForm(data={'old_password': 'old_password', 'new_password1': 'new_password1', 'new_password2': 'new_password2'})
        self.assertTrue(form.is_valid())
        user = User.objects.create_user(username='testuser', password='old_password')
        self.client.login(username='testuser', password='old_password')
        response = self.client.post(reverse_lazy('profile_update'), {'form': form})
        self.assertEqual(response.status_code, 302)
        self.assertEqual(response.url, reverse_lazy('profile_update'))

    def test_Form_invalid_cd84ba476e(self):
        form = PasswordChangeForm(data={'old_password': 'old_password', 'new_password1': 'new_password1', 'new_password2': 'new_password3'})
        self.assertFalse(form.is_valid())
        user = User.objects.create_user(username='testuser', password='old_password')
        self.client.login(username='testuser', password='old_password')
        response = self.client.post(reverse_lazy('profile_update'), {'form': form})
        self.assertEqual(response.status_code, 200)
        self.assertEqual(response.template_name, 'profile_update.html')

