# Test generated by RoostGPT for test python-django using AI Type Vertex AI and AI Model code-bison-32k

import unittest
from django.contrib import messages
from django.contrib.auth.decorators import login_required
from django.contrib.auth.mixins import LoginRequiredMixin
from django.core.paginator import Paginator
from django.db.models import Count, Q
from django.http import Http404
from django.shortcuts import get_object_or_404, render
from django.template.defaultfilters import slugify
from django.urls import reverse, reverse_lazy
from django.utils.decorators import method_decorator
from django.views.generic.detail import DetailView
from django.views.generic.edit import CreateView, UpdateView, DeleteView
from .models import Post, Category, Tag, HitCount, Comment
from .views import PostDeleteView


class TestGetObject(unittest.TestCase):

    def test_get_object_success(self):
        post = Post.objects.create(
            title="Test Post",
            slug="test-post",
            author=self.request.user,
            body="This is a test post.",
        )
        request = self.request
        request.user = post.author
        view = PostDeleteView()
        view.request = request
        view.kwargs = {'pk': post.pk}
        obj = view.get_object()
        self.assertEqual(obj, post)

    def test_get_object_failure(self):
        post = Post.objects.create(
            title="Test Post",
            slug="test-post",
            author=self.request.user,
            body="This is a test post.",
        )
        request = self.request
        request.user = User.objects.create_user(
            username='testuser',
            password='1234567890',
            email='testuser@example.com',
        )
        view = PostDeleteView()
        view.request = request
        view.kwargs = {'pk': post.pk}
        with self.assertRaises(Http404):
            view.get_object()

